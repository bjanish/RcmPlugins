<?php
namespace RcmRotatingImage\Controller;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-07-05 at 13:19:28.
 */
class PluginControllerTest extends \Rcm\Base\BaseTest
{
    /**
     * @var PluginController
     */
    protected $unit;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->unit = new PluginController();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @covers RcmJsonDataPluginToolkit\Controller\BasePluginController::readEntities
     * @covers RcmRotatingImage\Controller\PluginController
     */
    public function testPluginAction()
    {
        $imageEntities = array(new \RcmRotatingImage\Entity\Image());

        $this->unit->setEm(
            $this->getEmMock(
                array(
                    'RcmRotatingImage\Entity\Image' => array(
                        'findByInstanceId' => $imageEntities
                    )
                )
            )
        );

        $view = $this->unit->PluginAction(42);
        $viewVars = $view->getVariables();

        $this->assertEquals($imageEntities[0], $viewVars['image']);
    }

    /**
     * @covers RcmJsonDataPluginToolkit\Controller\BasePluginController::readEntities
     * @covers            RcmRotatingImage\Controller\PluginController
     * @expectedException RcmJsonDataPluginToolkit\Exception\PluginDataNotFoundException
     */
    public function testPluginActionWithNoInstance()
    {
        $this->unit->setEm(
            $this->getEmMock(
                array(
                    'RcmRotatingImage\Entity\Image' => array(
                        'findByInstanceId' => array()
                    )
                )
            )
        );

        $this->unit->PluginAction(42);
    }

    /**
     * @covers Rcm\Plugin\PluginInterface::saveAction
     * @covers RcmRotatingImage\Controller\PluginController::saveAction
     */
    function testSaveAction(){
        $em=$this->getEmMock();

        $em->expects($this->once())->method('persist');
        $em->expects($this->once())->method('flush');

        $this->unit->setEm($em);

        $this->unit->saveAction(42,'<p>hi</p>');
    }

    /**
     * @covers Rcm\Plugin\PluginInterface::deleteAction
     * @covers RcmRotatingImage\Controller\PluginController::deleteAction
     * @covers RcmJsonDataPluginToolkit\Controller\BasePluginController::deleteEntities
     */
    function testDeleteAction(){
        $entities = array(new \RcmRotatingImage\Entity\Image());

        $em=$this->getEmMock(
            array(
                'RcmRotatingImage\Entity\Image' => array(
                    'findByInstanceId' => $entities
                )
            )
        );

        $em->expects($this->once())->method('remove')->with($entities[0]);
        $em->expects($this->once())->method('flush');

        $this->unit->setEm($em);

        $this->unit->deleteAction(42);
    }

}
